// Code generated by ent, DO NOT EDIT.

package partner

import (
	"dbapp/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldID, id))
}

// WhamSiteID applies equality check predicate on the "wham_site_id" field. It's identical to WhamSiteIDEQ.
func WhamSiteID(v int) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamSiteID, v))
}

// WhamTitle applies equality check predicate on the "wham_title" field. It's identical to WhamTitleEQ.
func WhamTitle(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamTitle, v))
}

// WhamDescription applies equality check predicate on the "wham_description" field. It's identical to WhamDescriptionEQ.
func WhamDescription(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamDescription, v))
}

// KeycloakOrganisation applies equality check predicate on the "keycloak_organisation" field. It's identical to KeycloakOrganisationEQ.
func KeycloakOrganisation(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldKeycloakOrganisation, v))
}

// WhamPartnerURL applies equality check predicate on the "wham_partner_url" field. It's identical to WhamPartnerURLEQ.
func WhamPartnerURL(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamPartnerURL, v))
}

// WhamCreated applies equality check predicate on the "wham_created" field. It's identical to WhamCreatedEQ.
func WhamCreated(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamCreated, v))
}

// WhamUpdated applies equality check predicate on the "wham_updated" field. It's identical to WhamUpdatedEQ.
func WhamUpdated(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamUpdated, v))
}

// WhamSiteIDEQ applies the EQ predicate on the "wham_site_id" field.
func WhamSiteIDEQ(v int) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamSiteID, v))
}

// WhamSiteIDNEQ applies the NEQ predicate on the "wham_site_id" field.
func WhamSiteIDNEQ(v int) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamSiteID, v))
}

// WhamSiteIDIn applies the In predicate on the "wham_site_id" field.
func WhamSiteIDIn(vs ...int) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamSiteID, vs...))
}

// WhamSiteIDNotIn applies the NotIn predicate on the "wham_site_id" field.
func WhamSiteIDNotIn(vs ...int) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamSiteID, vs...))
}

// WhamSiteIDGT applies the GT predicate on the "wham_site_id" field.
func WhamSiteIDGT(v int) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamSiteID, v))
}

// WhamSiteIDGTE applies the GTE predicate on the "wham_site_id" field.
func WhamSiteIDGTE(v int) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamSiteID, v))
}

// WhamSiteIDLT applies the LT predicate on the "wham_site_id" field.
func WhamSiteIDLT(v int) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamSiteID, v))
}

// WhamSiteIDLTE applies the LTE predicate on the "wham_site_id" field.
func WhamSiteIDLTE(v int) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamSiteID, v))
}

// WhamTitleEQ applies the EQ predicate on the "wham_title" field.
func WhamTitleEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamTitle, v))
}

// WhamTitleNEQ applies the NEQ predicate on the "wham_title" field.
func WhamTitleNEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamTitle, v))
}

// WhamTitleIn applies the In predicate on the "wham_title" field.
func WhamTitleIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamTitle, vs...))
}

// WhamTitleNotIn applies the NotIn predicate on the "wham_title" field.
func WhamTitleNotIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamTitle, vs...))
}

// WhamTitleGT applies the GT predicate on the "wham_title" field.
func WhamTitleGT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamTitle, v))
}

// WhamTitleGTE applies the GTE predicate on the "wham_title" field.
func WhamTitleGTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamTitle, v))
}

// WhamTitleLT applies the LT predicate on the "wham_title" field.
func WhamTitleLT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamTitle, v))
}

// WhamTitleLTE applies the LTE predicate on the "wham_title" field.
func WhamTitleLTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamTitle, v))
}

// WhamTitleContains applies the Contains predicate on the "wham_title" field.
func WhamTitleContains(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContains(FieldWhamTitle, v))
}

// WhamTitleHasPrefix applies the HasPrefix predicate on the "wham_title" field.
func WhamTitleHasPrefix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasPrefix(FieldWhamTitle, v))
}

// WhamTitleHasSuffix applies the HasSuffix predicate on the "wham_title" field.
func WhamTitleHasSuffix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasSuffix(FieldWhamTitle, v))
}

// WhamTitleEqualFold applies the EqualFold predicate on the "wham_title" field.
func WhamTitleEqualFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEqualFold(FieldWhamTitle, v))
}

// WhamTitleContainsFold applies the ContainsFold predicate on the "wham_title" field.
func WhamTitleContainsFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContainsFold(FieldWhamTitle, v))
}

// WhamDescriptionEQ applies the EQ predicate on the "wham_description" field.
func WhamDescriptionEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamDescription, v))
}

// WhamDescriptionNEQ applies the NEQ predicate on the "wham_description" field.
func WhamDescriptionNEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamDescription, v))
}

// WhamDescriptionIn applies the In predicate on the "wham_description" field.
func WhamDescriptionIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamDescription, vs...))
}

// WhamDescriptionNotIn applies the NotIn predicate on the "wham_description" field.
func WhamDescriptionNotIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamDescription, vs...))
}

// WhamDescriptionGT applies the GT predicate on the "wham_description" field.
func WhamDescriptionGT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamDescription, v))
}

// WhamDescriptionGTE applies the GTE predicate on the "wham_description" field.
func WhamDescriptionGTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamDescription, v))
}

// WhamDescriptionLT applies the LT predicate on the "wham_description" field.
func WhamDescriptionLT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamDescription, v))
}

// WhamDescriptionLTE applies the LTE predicate on the "wham_description" field.
func WhamDescriptionLTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamDescription, v))
}

// WhamDescriptionContains applies the Contains predicate on the "wham_description" field.
func WhamDescriptionContains(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContains(FieldWhamDescription, v))
}

// WhamDescriptionHasPrefix applies the HasPrefix predicate on the "wham_description" field.
func WhamDescriptionHasPrefix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasPrefix(FieldWhamDescription, v))
}

// WhamDescriptionHasSuffix applies the HasSuffix predicate on the "wham_description" field.
func WhamDescriptionHasSuffix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasSuffix(FieldWhamDescription, v))
}

// WhamDescriptionEqualFold applies the EqualFold predicate on the "wham_description" field.
func WhamDescriptionEqualFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEqualFold(FieldWhamDescription, v))
}

// WhamDescriptionContainsFold applies the ContainsFold predicate on the "wham_description" field.
func WhamDescriptionContainsFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContainsFold(FieldWhamDescription, v))
}

// KeycloakOrganisationEQ applies the EQ predicate on the "keycloak_organisation" field.
func KeycloakOrganisationEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationNEQ applies the NEQ predicate on the "keycloak_organisation" field.
func KeycloakOrganisationNEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationIn applies the In predicate on the "keycloak_organisation" field.
func KeycloakOrganisationIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldKeycloakOrganisation, vs...))
}

// KeycloakOrganisationNotIn applies the NotIn predicate on the "keycloak_organisation" field.
func KeycloakOrganisationNotIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldKeycloakOrganisation, vs...))
}

// KeycloakOrganisationGT applies the GT predicate on the "keycloak_organisation" field.
func KeycloakOrganisationGT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationGTE applies the GTE predicate on the "keycloak_organisation" field.
func KeycloakOrganisationGTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationLT applies the LT predicate on the "keycloak_organisation" field.
func KeycloakOrganisationLT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationLTE applies the LTE predicate on the "keycloak_organisation" field.
func KeycloakOrganisationLTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationContains applies the Contains predicate on the "keycloak_organisation" field.
func KeycloakOrganisationContains(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContains(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationHasPrefix applies the HasPrefix predicate on the "keycloak_organisation" field.
func KeycloakOrganisationHasPrefix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasPrefix(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationHasSuffix applies the HasSuffix predicate on the "keycloak_organisation" field.
func KeycloakOrganisationHasSuffix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasSuffix(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationEqualFold applies the EqualFold predicate on the "keycloak_organisation" field.
func KeycloakOrganisationEqualFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEqualFold(FieldKeycloakOrganisation, v))
}

// KeycloakOrganisationContainsFold applies the ContainsFold predicate on the "keycloak_organisation" field.
func KeycloakOrganisationContainsFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContainsFold(FieldKeycloakOrganisation, v))
}

// WhamPartnerURLEQ applies the EQ predicate on the "wham_partner_url" field.
func WhamPartnerURLEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamPartnerURL, v))
}

// WhamPartnerURLNEQ applies the NEQ predicate on the "wham_partner_url" field.
func WhamPartnerURLNEQ(v string) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamPartnerURL, v))
}

// WhamPartnerURLIn applies the In predicate on the "wham_partner_url" field.
func WhamPartnerURLIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamPartnerURL, vs...))
}

// WhamPartnerURLNotIn applies the NotIn predicate on the "wham_partner_url" field.
func WhamPartnerURLNotIn(vs ...string) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamPartnerURL, vs...))
}

// WhamPartnerURLGT applies the GT predicate on the "wham_partner_url" field.
func WhamPartnerURLGT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamPartnerURL, v))
}

// WhamPartnerURLGTE applies the GTE predicate on the "wham_partner_url" field.
func WhamPartnerURLGTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamPartnerURL, v))
}

// WhamPartnerURLLT applies the LT predicate on the "wham_partner_url" field.
func WhamPartnerURLLT(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamPartnerURL, v))
}

// WhamPartnerURLLTE applies the LTE predicate on the "wham_partner_url" field.
func WhamPartnerURLLTE(v string) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamPartnerURL, v))
}

// WhamPartnerURLContains applies the Contains predicate on the "wham_partner_url" field.
func WhamPartnerURLContains(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContains(FieldWhamPartnerURL, v))
}

// WhamPartnerURLHasPrefix applies the HasPrefix predicate on the "wham_partner_url" field.
func WhamPartnerURLHasPrefix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasPrefix(FieldWhamPartnerURL, v))
}

// WhamPartnerURLHasSuffix applies the HasSuffix predicate on the "wham_partner_url" field.
func WhamPartnerURLHasSuffix(v string) predicate.Partner {
	return predicate.Partner(sql.FieldHasSuffix(FieldWhamPartnerURL, v))
}

// WhamPartnerURLEqualFold applies the EqualFold predicate on the "wham_partner_url" field.
func WhamPartnerURLEqualFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldEqualFold(FieldWhamPartnerURL, v))
}

// WhamPartnerURLContainsFold applies the ContainsFold predicate on the "wham_partner_url" field.
func WhamPartnerURLContainsFold(v string) predicate.Partner {
	return predicate.Partner(sql.FieldContainsFold(FieldWhamPartnerURL, v))
}

// WhamCreatedEQ applies the EQ predicate on the "wham_created" field.
func WhamCreatedEQ(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamCreated, v))
}

// WhamCreatedNEQ applies the NEQ predicate on the "wham_created" field.
func WhamCreatedNEQ(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamCreated, v))
}

// WhamCreatedIn applies the In predicate on the "wham_created" field.
func WhamCreatedIn(vs ...time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamCreated, vs...))
}

// WhamCreatedNotIn applies the NotIn predicate on the "wham_created" field.
func WhamCreatedNotIn(vs ...time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamCreated, vs...))
}

// WhamCreatedGT applies the GT predicate on the "wham_created" field.
func WhamCreatedGT(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamCreated, v))
}

// WhamCreatedGTE applies the GTE predicate on the "wham_created" field.
func WhamCreatedGTE(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamCreated, v))
}

// WhamCreatedLT applies the LT predicate on the "wham_created" field.
func WhamCreatedLT(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamCreated, v))
}

// WhamCreatedLTE applies the LTE predicate on the "wham_created" field.
func WhamCreatedLTE(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamCreated, v))
}

// WhamUpdatedEQ applies the EQ predicate on the "wham_updated" field.
func WhamUpdatedEQ(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldEQ(FieldWhamUpdated, v))
}

// WhamUpdatedNEQ applies the NEQ predicate on the "wham_updated" field.
func WhamUpdatedNEQ(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldNEQ(FieldWhamUpdated, v))
}

// WhamUpdatedIn applies the In predicate on the "wham_updated" field.
func WhamUpdatedIn(vs ...time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldIn(FieldWhamUpdated, vs...))
}

// WhamUpdatedNotIn applies the NotIn predicate on the "wham_updated" field.
func WhamUpdatedNotIn(vs ...time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldNotIn(FieldWhamUpdated, vs...))
}

// WhamUpdatedGT applies the GT predicate on the "wham_updated" field.
func WhamUpdatedGT(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldGT(FieldWhamUpdated, v))
}

// WhamUpdatedGTE applies the GTE predicate on the "wham_updated" field.
func WhamUpdatedGTE(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldGTE(FieldWhamUpdated, v))
}

// WhamUpdatedLT applies the LT predicate on the "wham_updated" field.
func WhamUpdatedLT(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldLT(FieldWhamUpdated, v))
}

// WhamUpdatedLTE applies the LTE predicate on the "wham_updated" field.
func WhamUpdatedLTE(v time.Time) predicate.Partner {
	return predicate.Partner(sql.FieldLTE(FieldWhamUpdated, v))
}

// HasApplication applies the HasEdge predicate on the "application" edge.
func HasApplication() predicate.Partner {
	return predicate.Partner(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, ApplicationTable, ApplicationPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasApplicationWith applies the HasEdge predicate on the "application" edge with a given conditions (other predicates).
func HasApplicationWith(preds ...predicate.Application) predicate.Partner {
	return predicate.Partner(func(s *sql.Selector) {
		step := newApplicationStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Partner) predicate.Partner {
	return predicate.Partner(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Partner) predicate.Partner {
	return predicate.Partner(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Partner) predicate.Partner {
	return predicate.Partner(sql.NotPredicates(p))
}
