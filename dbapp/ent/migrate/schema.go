// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdGroupsColumns holds the columns for the "ad_groups" table.
	AdGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
	}
	// AdGroupsTable holds the schema information for the "ad_groups" table.
	AdGroupsTable = &schema.Table{
		Name:       "ad_groups",
		Columns:    AdGroupsColumns,
		PrimaryKey: []*schema.Column{AdGroupsColumns[0]},
	}
	// ApplicationsColumns holds the columns for the "applications" table.
	ApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "alt_text", Type: field.TypeString},
		{Name: "uri", Type: field.TypeString},
		{Name: "icon_uri", Type: field.TypeString},
		{Name: "is_favourite", Type: field.TypeBool},
		{Name: "valid_from", Type: field.TypeTime},
		{Name: "valid_to", Type: field.TypeTime},
		{Name: "category_id", Type: field.TypeUUID},
	}
	// ApplicationsTable holds the schema information for the "applications" table.
	ApplicationsTable = &schema.Table{
		Name:       "applications",
		Columns:    ApplicationsColumns,
		PrimaryKey: []*schema.Column{ApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "applications_application_categories_application",
				Columns:    []*schema.Column{ApplicationsColumns[9]},
				RefColumns: []*schema.Column{ApplicationCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ApplicationCategoriesColumns holds the columns for the "application_categories" table.
	ApplicationCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "display_order", Type: field.TypeInt},
	}
	// ApplicationCategoriesTable holds the schema information for the "application_categories" table.
	ApplicationCategoriesTable = &schema.Table{
		Name:       "application_categories",
		Columns:    ApplicationCategoriesColumns,
		PrimaryKey: []*schema.Column{ApplicationCategoriesColumns[0]},
	}
	// CommunitiesColumns holds the columns for the "communities" table.
	CommunitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "wham_site_id", Type: field.TypeInt},
		{Name: "wham_title", Type: field.TypeString},
		{Name: "whan_description", Type: field.TypeString},
		{Name: "wham_community_url", Type: field.TypeString},
		{Name: "wham_created", Type: field.TypeTime},
		{Name: "wham_updated", Type: field.TypeTime},
		{Name: "featured_from", Type: field.TypeTime, Nullable: true},
		{Name: "featured_to", Type: field.TypeTime, Nullable: true},
	}
	// CommunitiesTable holds the schema information for the "communities" table.
	CommunitiesTable = &schema.Table{
		Name:       "communities",
		Columns:    CommunitiesColumns,
		PrimaryKey: []*schema.Column{CommunitiesColumns[0]},
	}
	// CommunityCategoriesColumns holds the columns for the "community_categories" table.
	CommunityCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "display_order", Type: field.TypeInt},
	}
	// CommunityCategoriesTable holds the schema information for the "community_categories" table.
	CommunityCategoriesTable = &schema.Table{
		Name:       "community_categories",
		Columns:    CommunityCategoriesColumns,
		PrimaryKey: []*schema.Column{CommunityCategoriesColumns[0]},
	}
	// PartnersColumns holds the columns for the "partners" table.
	PartnersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "wham_site_id", Type: field.TypeInt},
		{Name: "wham_title", Type: field.TypeString},
		{Name: "wham_description", Type: field.TypeString},
		{Name: "keycloak_organisation", Type: field.TypeString},
		{Name: "wham_partner_url", Type: field.TypeString},
		{Name: "wham_created", Type: field.TypeTime},
		{Name: "wham_updated", Type: field.TypeTime},
	}
	// PartnersTable holds the schema information for the "partners" table.
	PartnersTable = &schema.Table{
		Name:       "partners",
		Columns:    PartnersColumns,
		PrimaryKey: []*schema.Column{PartnersColumns[0]},
	}
	// PartnerPageLinkFragmentsColumns holds the columns for the "partner_page_link_fragments" table.
	PartnerPageLinkFragmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "link_text", Type: field.TypeString},
		{Name: "wham_partner_url_suffix", Type: field.TypeString, Nullable: true},
		{Name: "display_order", Type: field.TypeInt},
	}
	// PartnerPageLinkFragmentsTable holds the schema information for the "partner_page_link_fragments" table.
	PartnerPageLinkFragmentsTable = &schema.Table{
		Name:       "partner_page_link_fragments",
		Columns:    PartnerPageLinkFragmentsColumns,
		PrimaryKey: []*schema.Column{PartnerPageLinkFragmentsColumns[0]},
	}
	// AdgroupCommunityMappingColumns holds the columns for the "adgroup_community_mapping" table.
	AdgroupCommunityMappingColumns = []*schema.Column{
		{Name: "ad_group_id", Type: field.TypeUUID},
		{Name: "community_id", Type: field.TypeUUID},
	}
	// AdgroupCommunityMappingTable holds the schema information for the "adgroup_community_mapping" table.
	AdgroupCommunityMappingTable = &schema.Table{
		Name:       "adgroup_community_mapping",
		Columns:    AdgroupCommunityMappingColumns,
		PrimaryKey: []*schema.Column{AdgroupCommunityMappingColumns[0], AdgroupCommunityMappingColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "adgroup_community_mapping_ad_group_id",
				Columns:    []*schema.Column{AdgroupCommunityMappingColumns[0]},
				RefColumns: []*schema.Column{AdGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "adgroup_community_mapping_community_id",
				Columns:    []*schema.Column{AdgroupCommunityMappingColumns[1]},
				RefColumns: []*schema.Column{CommunitiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ApplicationPartnerAccessColumns holds the columns for the "application_partner_access" table.
	ApplicationPartnerAccessColumns = []*schema.Column{
		{Name: "application_id", Type: field.TypeUUID},
		{Name: "partner_id", Type: field.TypeUUID},
	}
	// ApplicationPartnerAccessTable holds the schema information for the "application_partner_access" table.
	ApplicationPartnerAccessTable = &schema.Table{
		Name:       "application_partner_access",
		Columns:    ApplicationPartnerAccessColumns,
		PrimaryKey: []*schema.Column{ApplicationPartnerAccessColumns[0], ApplicationPartnerAccessColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "application_partner_access_application_id",
				Columns:    []*schema.Column{ApplicationPartnerAccessColumns[0]},
				RefColumns: []*schema.Column{ApplicationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "application_partner_access_partner_id",
				Columns:    []*schema.Column{ApplicationPartnerAccessColumns[1]},
				RefColumns: []*schema.Column{PartnersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CommunityCategoryMappingColumns holds the columns for the "community_category_mapping" table.
	CommunityCategoryMappingColumns = []*schema.Column{
		{Name: "community_category_id", Type: field.TypeUUID},
		{Name: "community_id", Type: field.TypeUUID},
	}
	// CommunityCategoryMappingTable holds the schema information for the "community_category_mapping" table.
	CommunityCategoryMappingTable = &schema.Table{
		Name:       "community_category_mapping",
		Columns:    CommunityCategoryMappingColumns,
		PrimaryKey: []*schema.Column{CommunityCategoryMappingColumns[0], CommunityCategoryMappingColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "community_category_mapping_community_category_id",
				Columns:    []*schema.Column{CommunityCategoryMappingColumns[0]},
				RefColumns: []*schema.Column{CommunityCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "community_category_mapping_community_id",
				Columns:    []*schema.Column{CommunityCategoryMappingColumns[1]},
				RefColumns: []*schema.Column{CommunitiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdGroupsTable,
		ApplicationsTable,
		ApplicationCategoriesTable,
		CommunitiesTable,
		CommunityCategoriesTable,
		PartnersTable,
		PartnerPageLinkFragmentsTable,
		AdgroupCommunityMappingTable,
		ApplicationPartnerAccessTable,
		CommunityCategoryMappingTable,
	}
)

func init() {
	ApplicationsTable.ForeignKeys[0].RefTable = ApplicationCategoriesTable
	AdgroupCommunityMappingTable.ForeignKeys[0].RefTable = AdGroupsTable
	AdgroupCommunityMappingTable.ForeignKeys[1].RefTable = CommunitiesTable
	ApplicationPartnerAccessTable.ForeignKeys[0].RefTable = ApplicationsTable
	ApplicationPartnerAccessTable.ForeignKeys[1].RefTable = PartnersTable
	CommunityCategoryMappingTable.ForeignKeys[0].RefTable = CommunityCategoriesTable
	CommunityCategoryMappingTable.ForeignKeys[1].RefTable = CommunitiesTable
}
